// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: arithmetic_service.proto

#ifndef PROTOBUF_INCLUDED_arithmetic_5fservice_2eproto
#define PROTOBUF_INCLUDED_arithmetic_5fservice_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_arithmetic_5fservice_2eproto 

namespace protobuf_arithmetic_5fservice_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_arithmetic_5fservice_2eproto
namespace Arithmetic {
class ReqOperand;
class ReqOperandDefaultTypeInternal;
extern ReqOperandDefaultTypeInternal _ReqOperand_default_instance_;
class RspOperand;
class RspOperandDefaultTypeInternal;
extern RspOperandDefaultTypeInternal _RspOperand_default_instance_;
}  // namespace Arithmetic
namespace google {
namespace protobuf {
template<> ::Arithmetic::ReqOperand* Arena::CreateMaybeMessage<::Arithmetic::ReqOperand>(Arena*);
template<> ::Arithmetic::RspOperand* Arena::CreateMaybeMessage<::Arithmetic::RspOperand>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Arithmetic {

// ===================================================================

class ReqOperand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Arithmetic.ReqOperand) */ {
 public:
  ReqOperand();
  virtual ~ReqOperand();

  ReqOperand(const ReqOperand& from);

  inline ReqOperand& operator=(const ReqOperand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ReqOperand(ReqOperand&& from) noexcept
    : ReqOperand() {
    *this = ::std::move(from);
  }

  inline ReqOperand& operator=(ReqOperand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqOperand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ReqOperand* internal_default_instance() {
    return reinterpret_cast<const ReqOperand*>(
               &_ReqOperand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ReqOperand* other);
  friend void swap(ReqOperand& a, ReqOperand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ReqOperand* New() const final {
    return CreateMaybeMessage<ReqOperand>(NULL);
  }

  ReqOperand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ReqOperand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ReqOperand& from);
  void MergeFrom(const ReqOperand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReqOperand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num_1 = 1;
  void clear_num_1();
  static const int kNum1FieldNumber = 1;
  ::google::protobuf::int32 num_1() const;
  void set_num_1(::google::protobuf::int32 value);

  // int32 num_2 = 2;
  void clear_num_2();
  static const int kNum2FieldNumber = 2;
  ::google::protobuf::int32 num_2() const;
  void set_num_2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Arithmetic.ReqOperand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_1_;
  ::google::protobuf::int32 num_2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_arithmetic_5fservice_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RspOperand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Arithmetic.RspOperand) */ {
 public:
  RspOperand();
  virtual ~RspOperand();

  RspOperand(const RspOperand& from);

  inline RspOperand& operator=(const RspOperand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RspOperand(RspOperand&& from) noexcept
    : RspOperand() {
    *this = ::std::move(from);
  }

  inline RspOperand& operator=(RspOperand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RspOperand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RspOperand* internal_default_instance() {
    return reinterpret_cast<const RspOperand*>(
               &_RspOperand_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RspOperand* other);
  friend void swap(RspOperand& a, RspOperand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RspOperand* New() const final {
    return CreateMaybeMessage<RspOperand>(NULL);
  }

  RspOperand* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RspOperand>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RspOperand& from);
  void MergeFrom(const RspOperand& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RspOperand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 num = 1;
  void clear_num();
  static const int kNumFieldNumber = 1;
  ::google::protobuf::int32 num() const;
  void set_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Arithmetic.RspOperand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_arithmetic_5fservice_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReqOperand

// int32 num_1 = 1;
inline void ReqOperand::clear_num_1() {
  num_1_ = 0;
}
inline ::google::protobuf::int32 ReqOperand::num_1() const {
  // @@protoc_insertion_point(field_get:Arithmetic.ReqOperand.num_1)
  return num_1_;
}
inline void ReqOperand::set_num_1(::google::protobuf::int32 value) {
  
  num_1_ = value;
  // @@protoc_insertion_point(field_set:Arithmetic.ReqOperand.num_1)
}

// int32 num_2 = 2;
inline void ReqOperand::clear_num_2() {
  num_2_ = 0;
}
inline ::google::protobuf::int32 ReqOperand::num_2() const {
  // @@protoc_insertion_point(field_get:Arithmetic.ReqOperand.num_2)
  return num_2_;
}
inline void ReqOperand::set_num_2(::google::protobuf::int32 value) {
  
  num_2_ = value;
  // @@protoc_insertion_point(field_set:Arithmetic.ReqOperand.num_2)
}

// -------------------------------------------------------------------

// RspOperand

// int32 num = 1;
inline void RspOperand::clear_num() {
  num_ = 0;
}
inline ::google::protobuf::int32 RspOperand::num() const {
  // @@protoc_insertion_point(field_get:Arithmetic.RspOperand.num)
  return num_;
}
inline void RspOperand::set_num(::google::protobuf::int32 value) {
  
  num_ = value;
  // @@protoc_insertion_point(field_set:Arithmetic.RspOperand.num)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Arithmetic

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_arithmetic_5fservice_2eproto
